{"version":3,"sources":["MovieCard.js","MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","_ref","movie","_jsx","className","style","backgroundImage","concat","image","children","_jsxs","src","alt","title","subtitle","year","director","duration","genres","join","description","MovieList","movies","setMovies","useState","loading","setLoading","error","setError","useEffect","fetch","then","response","ok","Error","json","data","catch","console","message","map","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"4OA2CeA,MArBGC,IAAgB,IAAf,MAAEC,GAAOD,EAC1B,OACEE,cAAA,OAAKC,UAAU,aAAaC,MAAO,CAAEC,gBAAgB,OAADC,OAASL,EAAMM,MAAK,MAAMC,SAC5EC,eAAA,OAAKN,UAAU,gBAAeK,SAAA,CAC5BN,cAAA,OAAKQ,IAAKT,EAAMM,MAAOI,IAAKV,EAAMW,MAAOT,UAAU,iBACnDM,eAAA,OAAKN,UAAU,gBAAeK,SAAA,CAC5BN,cAAA,MAAIC,UAAU,cAAaK,SAAEP,EAAMW,QACnCV,cAAA,MAAIC,UAAU,iBAAgBK,SAAEP,EAAMY,WACtCJ,eAAA,OAAKN,UAAU,aAAYK,SAAA,CACzBN,cAAA,QAAMC,UAAU,aAAYK,SAAEP,EAAMa,OACpCZ,cAAA,QAAMC,UAAU,iBAAgBK,SAAEP,EAAMc,WACxCN,eAAA,QAAMN,UAAU,iBAAgBK,SAAA,CAAEP,EAAMe,SAAS,UACjDd,cAAA,QAAMC,UAAU,eAAcK,SAAEP,EAAMgB,OAAOC,KAAK,WAEpDhB,cAAA,KAAGC,UAAU,oBAAmBK,SAAEP,EAAMkB,qBAGxC,ECKKC,MAzCGA,KAChB,MAAOC,EAAQC,GAAaC,mBAAS,KAC9BC,EAASC,GAAcF,oBAAS,IAChCG,EAAOC,GAAYJ,mBAAS,MAqBnC,OAnBAK,qBAAU,KACRC,MAAM,gBACHC,MAAMC,IACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,MAAM,IAEvBJ,MAAMK,IACLb,EAAUa,GACVV,GAAW,EAAM,IAElBW,OAAOV,IACNW,QAAQX,MAAM,6BAA8BA,GAC5CC,EAASD,GACTD,GAAW,EAAM,GACjB,GACH,IAECD,EACKtB,cAAA,OAAAM,SAAK,eAGVkB,EACKjB,eAAA,OAAAD,SAAA,CAAK,UAAQkB,EAAMY,WAI1BpC,cAAA,OAAKC,UAAU,aAAYK,SACxBa,EAAOkB,KAAKtC,GACXC,cAACH,EAAS,CAAgBE,MAAOA,GAAjBA,EAAMuC,OAEpB,E,MC3BKC,MATHA,IAERhC,eAAA,OAAKN,UAAU,MAAKK,SAAA,CAClBN,cAAA,MAAAM,SAAI,eACJN,cAACkB,EAAS,OCIDsB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK9B,IAAkD,IAAjD,OAAE6C,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASjD,EACpE6C,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,ECHWO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpD,cAACqD,IAAMC,WAAU,CAAAhD,SACfN,cAACuC,EAAG,OAORC,G","file":"static/js/main.cc35f770.chunk.js","sourcesContent":["// import React from 'react';\r\n// import './MovieCard.css';\r\n\r\n// const MovieCard = ({ movie }) => {\r\n//   return (\r\n//     <div className=\"movie-card\">\r\n//       <img src={movie.image} alt={movie.title} className=\"movie-image\" />\r\n//       <h2 className=\"movie-title\">{movie.title}</h2>\r\n//       <h3 className=\"movie-subtitle\">{movie.subtitle}</h3>\r\n//       <p className=\"movie-description\">{movie.description}</p>\r\n//       <p className=\"movie-rating\">Rating: {movie.rating}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MovieCard;\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport './MovieCard.css';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  return (\r\n    <div className=\"movie-card\" style={{ backgroundImage: `url(${movie.image})` }}>\r\n      <div className=\"movie-content\">\r\n        <img src={movie.image} alt={movie.title} className=\"movie-poster\" />\r\n        <div className=\"movie-details\">\r\n          <h2 className=\"movie-title\">{movie.title}</h2>\r\n          <h3 className=\"movie-subtitle\">{movie.subtitle}</h3>\r\n          <div className=\"movie-info\">\r\n            <span className=\"movie-year\">{movie.year}</span>\r\n            <span className=\"movie-director\">{movie.director}</span>\r\n            <span className=\"movie-duration\">{movie.duration} min</span>\r\n            <span className=\"movie-genres\">{movie.genres.join(', ')}</span>\r\n          </div>\r\n          <p className=\"movie-description\">{movie.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst MovieList = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('/movies.json')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setMovies(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching the movies:', error);\r\n        setError(error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies.map((movie) => (\r\n        <MovieCard key={movie.id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React from 'react';\nimport MovieList from './MovieList';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <h1>Movie List</h1>\n      <MovieList />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}